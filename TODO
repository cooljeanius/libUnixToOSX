TODO list:
- add implementations for the following functions:
 * catopen
 * catgets
 * catclose
 * crypt
 * ecvt
 * fcvt
 * setmntent
 * addmntent
 * endmntent
 * hasmntopt
 * sbrk
 * brk
 * shmget
 * swapon
 * swapoff
- make the getmntent() implementation non-Android specific
- add test(s) for dysize() implementation
- finish implementation of fcloseall()
- add programs that accept the same arguments as, and produce similar output to, but are actually just wrappers around, the OSX counterparts of the following:
 * ldd
 * lsmod
- add implementations for the following headers:
 * lcrypt.h
 * malloc.h
 * mm.h
 * module.h
 * nl_types.h (a new implementation that wraps the relevant CoreFoundation functions that the Apple documentation says to wrap... see some of the other ".in.h" headers for how to do an "#include_next"-style header for when a header exists but is incomplete)
 * ptms.h
 * stream.h
 * stropts.h
 * swapctl.h
 * termio.h (grab an old version first to compare... assuming the documentation was correct about an old version existing in the first place)
 * utmp.h (un-deprecate it)
 * values.h
 * wchar.h (see notes for nl_types.h)
- add test(s) for the following header implementations:
 * alloc.h
- ftw_Apple.h: finish it, and see if it still needs the "_Apple" suffix
- continue doing misc. edits
- get the autoscan warnings to work properly
- see FIXMES.txt and XXX.txt
- then there's this list of TODOs from the source code, originally found with "git grep TODO", but then subsequently edited for readability:
Makefile.am:## TODO: stop hardcoding the system acdir
Makefile.am:## TODO: combine all of the gnulib module makefile snippets, so that it does NOT just look like this makefile was generated by gnulib-tool
build-aux/ar-lib:    u*)           ;; # TODO: don't ignore the update modifier
build-aux/ar-lib:    v*)           ;; # TODO: don't ignore the verbose modifier
build-aux/ltmain.sh:# TODO: could optimize this to just extract one archive.
configure:  ## TODO: macro-ize:
configure:    ## TODO: check if used
configure:    ## TODO: check if used
configure:    ## TODO: check if used
configure:/* TODO: check to confirm that I used the right preprocessor macro for detecting NetBSD here */
configure.ac:dnl#TODO: eventually switch to gnits strictness
configure.ac:dnl#TODO: add a configure flag to enable the warnings conditionally
configure.ac:dnl#TODO: check to see if we need CoreFoundation for these next 3 CoreFoundation types
configure.ac:dnl#TODO: check where locale_t comes from
configure.ac:## TODO: macro-ize silent skipping of checks when cache value is already set
configure.ac:dnl#TODO: check to see if _DARWIN_C_SOURCE needs to be defined for Dl_info
fcntl.c:          /* TODO: Translate GetLastError () into errno.  */
ftw_Apple.c:/* TODO: write an actual compar() function to use in the 3rd argument to fts_open */
m4/fallocate.m4:    ## TODO: check if used
m4/posix_fallocate.m4:    ## TODO: check if used
m4/posix_fallocate64.m4:    ## TODO: check if used
m4/programs_extra.m4:dnl# TODO: use "otool -L" as a substitute for "ldd" when applicable
m4/sys_siglist.m4:/* TODO: check to confirm that I used the right preprocessor macro for detecting NetBSD here */
mountlist.c:/* TODO: while the default for darwin may be the above, I am trying to implement getmntent() and friends here, so see if we can use the versions of those functions that get built here in this library, as opposed to the pre-existing ones that get picked up at configure time (which is where most of the defines come from) */
mountlist.c:/* TODO: thouroughly test all possibilities/conditions/ifdefs */
obstack.c:/* TODO: fix the rest of the clang static analyzer warnings about null pointer dereferences that cascade from fixing the previous one */
poll.c:	/* TODO: not sure if my casting is correct here... */
poll/poll-emulator/pollemu.c:/* TODO: the block comment at the top already says that an ANSI C compiler is required, so that means that we should be able to get rid of pre-ANSI function declarations */
poll/poll-emulator/pollemu.h:/* TODO: the block comment at the top already says that an ANSI C compiler is required, so that means that we should be able to get rid of pre-ANSI pseudo-prototypes */
relocatable.c:/* TODO: actually calculate this with dladdr() once we have a way to provide a valid address for the 1st paramater to dladdr() */
